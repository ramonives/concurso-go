#!/bin/bash

echo "üöÄ Iniciando teste de telemetria com OpenTelemetry e Tempo"
echo ""

# Verificar se o docker-compose est√° rodando
echo "üìã Verificando se os servi√ßos est√£o rodando..."
if ! docker ps | grep -q "concurso_tempo"; then
    echo "‚ùå Tempo n√£o est√° rodando. Iniciando servi√ßos..."
    cd docker
    docker-compose up -d
    cd ..
    echo "‚è≥ Aguardando servi√ßos inicializarem..."
    sleep 10
else
    echo "‚úÖ Servi√ßos j√° est√£o rodando"
fi

echo ""
echo "üåê URLs dispon√≠veis:"
echo "   - Aplica√ß√£o: http://localhost:8080"
echo "   - Grafana: http://localhost:3000"
echo "   - Tempo: http://localhost:3200"
echo ""

# Testar endpoints da aplica√ß√£o
echo "üß™ Testando endpoints da aplica√ß√£o..."

echo "1. Health check..."
curl -s http://localhost:8080/health | jq .

echo ""
echo "2. Populando dados..."
curl -s -X POST http://localhost:8080/start | jq .

echo ""
echo "3. Extraindo registros..."
curl -s -X POST http://localhost:8080/extrair/2024-01-15 | jq .

echo ""
echo "4. Consumindo registros..."
curl -s -X POST http://localhost:8080/consumir/2024-01-15 | jq .

echo ""
echo "5. Limpando Kafka..."
curl -s -X POST http://localhost:8080/limpar | jq .

echo ""
echo "‚úÖ Teste conclu√≠do!"
echo ""
echo "üìä Para visualizar os traces:"
echo "   1. Acesse http://localhost:3000 (Grafana)"
echo "   2. V√° em 'Explore'"
echo "   3. Selecione 'Tempo' como datasource"
echo "   4. Digite: {service.name=\"concurso-go-app\"}"
echo "   5. Clique em 'Run Query'"
echo ""
echo "üîç Para ver traces espec√≠ficos no Tempo:"
echo "   - Acesse http://localhost:3200"
echo "   - Use a query: {service.name=\"concurso-go-app\"}" 